import spotipy
from spotipy.oauth2 import SpotifyOAuth
import time
from flask import Flask, request, url_for, session, redirect
from requests import get, post
import json


app = Flask(__name__)

app.config['SESSION_COOKIE_NAME'] = 'Spotify Cookie'
app.secret_key = 'jbjvg7$shbsbsududbjsd'
TOKEN_INFO = 'token_info'

@app.route('/')
def login():
    auth_url = create_spotify_oauth().get_authorize_url()
    return redirect(auth_url)

@app.route('/redirect')
def redirect_page():
    session.clear()
    code = request.args.get('code')
    token_info = create_spotify_oauth().get_access_token(code)
    session[TOKEN_INFO] = token_info
    return redirect(url_for('home', _external=True))

@app.route('/home')
def home():
    try:
        token_info = get_token()
    except:
        print("User not logged in")
        return redirect('/')

    token = token_info['access_token']
    # Display user's top tracks
    user_top_tracks = get_user_top_tracks(token)
    print("User's Top Tracks:")
    for idx, track in enumerate(user_top_tracks):
        print(f"{idx + 1}. {track['name']} by {track['artists'][0]['name']}")

    
    artist_name = "future"  # replace with whatever artist
    artist = search_for_artist(token, artist_name)
    if artist:
        artist_id = artist['id']
        songs = get_songs_by_artist(token, artist_id)
        print(f"\nTop 10 songs by {artist_name}:\n")
        for idx, song in enumerate(songs):
            print(f"{idx + 1}. {song['name']}")

    return "OAuth successful. Check terminal for output."

def get_token():
    token_info = session.get(TOKEN_INFO, None)
    if not token_info:
        return redirect(url_for('login', _external=False))

    now = int(time.time())
    is_expired = token_info['expires_at'] - now < 60
    if is_expired:
        spotify_oauth = create_spotify_oauth()
        token_info = spotify_oauth.refresh_access_token(token_info['refresh_token'])
        session[TOKEN_INFO] = token_info

    return token_info

def create_spotify_oauth():
    return SpotifyOAuth(
        client_id="e6326c4c4d7c436bb8aa5cbb18c311dc",
        client_secret="1f2792d2cfa14216b9bf0732465004a8",
        redirect_uri=url_for('redirect_page', _external=True),
        scope='user-library-read playlist-modify-public playlist-modify-private user-top-read'
    )

def get_auth_header(token):
    return {"Authorization": "Bearer " + token}

def search_for_artist(token, artist_name):
    url = "https://api.spotify.com/v1/search"
    headers = get_auth_header(token)
    query = f"?q={artist_name}&type=artist&limit=1"

    query_url = url + query
    result = get(query_url, headers=headers)
    json_result = json.loads(result.content)["artists"]["items"]
    if len(json_result) == 0:
        print("No artist with this name exists...")
        return None

    return json_result[0]

def get_songs_by_artist(token, artist_id):
    url = f"https://api.spotify.com/v1/artists/{artist_id}/top-tracks?country=US"
    headers = get_auth_header(token)
    result = get(url, headers=headers)
    json_result = json.loads(result.content)["tracks"]
    return json_result  

def get_user_top_tracks(token):
    url = "https://api.spotify.com/v1/me/top/tracks"
    headers = get_auth_header(token)
    result = get(url, headers=headers)
    json_result = json.loads(result.content)["items"]
    return json_result  

if __name__ == '__main__':
    app.run(debug=True)
