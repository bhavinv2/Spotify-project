{"ast":null,"code":"var _jsxFileName = \"/Users/sakshisathrasala/miracle spotify/spotify/src/pages/Chatbot/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSend = () => {\n    if (input.trim()) {\n      setMessages([...messages, {\n        text: input,\n        user: true\n      }]);\n      setInput('');\n      // Placeholder for sending input to the backend and getting a response\n      setMessages([...messages, {\n        text: input,\n        user: true\n      }, {\n        text: 'This is a response',\n        user: false\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat with Your Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.user ? 'user' : 'bot'}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && handleSend(),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","handleSend","trim","text","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/sakshisathrasala/miracle spotify/spotify/src/pages/Chatbot/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Chatbot.css';\n\nfunction Chatbot() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const handleSend = () => {\n    if (input.trim()) {\n      setMessages([...messages, { text: input, user: true }]);\n      setInput('');\n      // Placeholder for sending input to the backend and getting a response\n      setMessages([...messages, { text: input, user: true }, { text: 'This is a response', user: false }]);\n    }\n  };\n\n  return (\n    <div className=\"chatbot\">\n      <h2>Chat with Your Stats</h2>\n      <div className=\"chat-window\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`chat-message ${msg.user ? 'user' : 'bot'}`}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n        placeholder=\"Type a message...\"\n      />\n      <button onClick={handleSend}>Send</button>\n    </div>\n  );\n}\n\nexport default Chatbot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;MAChBJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEM,IAAI,EAAEJ,KAAK;QAAEK,IAAI,EAAE;MAAK,CAAC,CAAC,CAAC;MACvDJ,QAAQ,CAAC,EAAE,CAAC;MACZ;MACAF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEM,IAAI,EAAEJ,KAAK;QAAEK,IAAI,EAAE;MAAK,CAAC,EAAE;QAAED,IAAI,EAAE,oBAAoB;QAAEC,IAAI,EAAE;MAAM,CAAC,CAAC,CAAC;IACtG;EACF,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBZ,OAAA;MAAAY,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BhB,OAAA;MAAKW,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBT,QAAQ,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBnB,OAAA;QAAiBW,SAAS,EAAE,gBAAgBO,GAAG,CAACR,IAAI,GAAG,MAAM,GAAG,KAAK,EAAG;QAAAE,QAAA,EACrEM,GAAG,CAACT;MAAI,GADDU,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhB,KAAM;MACbiB,QAAQ,EAAGC,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAInB,UAAU,CAAC,CAAE;MACpDoB,WAAW,EAAC;IAAmB;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFhB,OAAA;MAAQ4B,OAAO,EAAErB,UAAW;MAAAK,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACd,EAAA,CAjCQD,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAmChB,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}