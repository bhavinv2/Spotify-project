{"ast":null,"code":"var _jsxFileName = \"/Users/sakshisathrasala/miracle spotify/spotify/src/pages/MoodPlaylist/MoodPlaylist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MoodPlaylist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoodPlaylist() {\n  _s();\n  const [mood, setMood] = useState('');\n  const [playlist, setPlaylist] = useState([]);\n  const handleGeneratePlaylist = () => {\n    // Placeholder for generating playlist based on mood\n    setPlaylist(['Song 1', 'Song 2', 'Song 3', 'Song 4', 'Song 5', 'Song 6', 'Song 7', 'Song 8', 'Song 9', 'Song 10']);\n  };\n  const handleSavePlaylist = () => {\n    // Placeholder for saving the playlist\n    alert('Playlist saved!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood-playlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Playlist Based on Your Mood\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: mood,\n      onChange: e => setMood(e.target.value),\n      placeholder: \"Enter your mood...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGeneratePlaylist,\n      children: \"Generate Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist\",\n      children: playlist.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-item\",\n        children: song\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSavePlaylist,\n      children: \"Save Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(MoodPlaylist, \"GoKo8D5vHFL/1HAh2Tj9j5GqYF4=\");\n_c = MoodPlaylist;\nexport default MoodPlaylist;\nvar _c;\n$RefreshReg$(_c, \"MoodPlaylist\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MoodPlaylist","_s","mood","setMood","playlist","setPlaylist","handleGeneratePlaylist","handleSavePlaylist","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","song","index","_c","$RefreshReg$"],"sources":["/Users/sakshisathrasala/miracle spotify/spotify/src/pages/MoodPlaylist/MoodPlaylist.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './MoodPlaylist.css';\n\nfunction MoodPlaylist() {\n  const [mood, setMood] = useState('');\n  const [playlist, setPlaylist] = useState([]);\n\n  const handleGeneratePlaylist = () => {\n    // Placeholder for generating playlist based on mood\n    setPlaylist(['Song 1', 'Song 2', 'Song 3', 'Song 4', 'Song 5', 'Song 6', 'Song 7', 'Song 8', 'Song 9', 'Song 10' ]);\n  };\n\n  const handleSavePlaylist = () => {\n    // Placeholder for saving the playlist\n    alert('Playlist saved!');\n  };\n\n  return (\n    <div className=\"mood-playlist\">\n      <h2>Create a Playlist Based on Your Mood</h2>\n      <input\n        type=\"text\"\n        value={mood}\n        onChange={(e) => setMood(e.target.value)}\n        placeholder=\"Enter your mood...\"\n      />\n      <button onClick={handleGeneratePlaylist}>Generate Playlist</button>\n      <div className=\"playlist\">\n        {playlist.map((song, index) => (\n          <div key={index} className=\"playlist-item\">\n            {song}\n          </div>\n        ))}\n      </div>\n      <button onClick={handleSavePlaylist}>Save Playlist</button>\n    </div>\n  );\n}\n\nexport default MoodPlaylist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,sBAAsB,GAAGA,CAAA,KAAM;IACnC;IACAD,WAAW,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAE,CAAC;EACrH,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACAC,KAAK,CAAC,iBAAiB,CAAC;EAC1B,CAAC;EAED,oBACET,OAAA;IAAKU,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BX,OAAA;MAAAW,QAAA,EAAI;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7Cf,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEd,IAAK;MACZe,QAAQ,EAAGC,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,WAAW,EAAC;IAAoB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACFf,OAAA;MAAQsB,OAAO,EAAEf,sBAAuB;MAAAI,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnEf,OAAA;MAAKU,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBN,QAAQ,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBzB,OAAA;QAAiBU,SAAS,EAAC,eAAe;QAAAC,QAAA,EACvCa;MAAI,GADGC,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNf,OAAA;MAAQsB,OAAO,EAAEd,kBAAmB;MAAAG,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV;AAACb,EAAA,CAlCQD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAoCrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}